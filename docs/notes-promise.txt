
Promise
-------

Promise States
--------------
1. Pending
2. Resolved
3. Rejected


Sample - Bank transaction
--------------------------
1. Withdraw money
2. Update passbook // dependent on task #1
3. Apply for a car loan // independent task

// Synchronous operations
console.log('Withdraw money'); // 3000
console.log('Update passbook');
console.log('Apply for loan');

// Async operations using promise
p1 = new Promise((resolve, reject) => {
  console.log('Withdaw start.');
  setTimeout(() => {
    console.log('Withdraw end.');
    // resolve(100);
    reject('Your withdraw amount has exceeded the balance');
  }, 3000);
});
p2 = new Promise((resolve, reject) => {
  console.log('Apply loan start.');
  setTimeout(() => {
    console.log('Apply loan end.');
    resolve();
  }, 5000);
});
p1.then((amount) => {
  console.log('Update passbook - start.');
  console.log(' Your withdrew: Rs.', amount);
  console.log('Update passbook - end.');
});
p1.catch((error) => {
  console.log('Withdaw failed.');
  console.log(error);
});

console.log('Apply for loan - start');
console.log('Apply for loan - end');
